<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack listing
///Attacks: range, damage, effectrange, countermove?, animation, pref min range, projectile, time acting.
attack_ninja_slash = ds_list_create();
ds_list_add(attack_ninja_slash, 110);
ds_list_add(attack_ninja_slash, 7);
ds_list_add(attack_ninja_slash, 1);
ds_list_add(attack_ninja_slash, false);
ds_list_add(attack_ninja_slash, spr_ninja_low_slash);
ds_list_add(attack_ninja_slash, 0);
ds_list_add(attack_ninja_slash, obj_no_projectile);
ds_list_add(attack_ninja_slash, 3);
ds_list_add(attack_ninja_slash, 40);//x collision
ds_list_add(attack_ninja_slash, 10);//y collision
ds_list_add(attack_ninja_slash, obj_ninja_low_slash_collision);//collision mask

attack_ninja_medium_slash = ds_list_create();
ds_list_add(attack_ninja_medium_slash, 250);
ds_list_add(attack_ninja_medium_slash, 18);
ds_list_add(attack_ninja_medium_slash, 1);
ds_list_add(attack_ninja_medium_slash, false);
ds_list_add(attack_ninja_medium_slash, spr_ninja_midium_slash);
ds_list_add(attack_ninja_medium_slash, 50);
ds_list_add(attack_ninja_medium_slash, obj_no_projectile);
ds_list_add(attack_ninja_medium_slash, 14);
ds_list_add(attack_ninja_medium_slash, 179);//x collision
ds_list_add(attack_ninja_medium_slash, -23);//y collision
ds_list_add(attack_ninja_medium_slash, obj_ninja_medium_slash_collision);//collision mask

attack_ninja_shoot = ds_list_create();
ds_list_add(attack_ninja_shoot, 500);
ds_list_add(attack_ninja_shoot, 22);
ds_list_add(attack_ninja_shoot, 1);
ds_list_add(attack_ninja_shoot, false);
ds_list_add(attack_ninja_shoot, spr_ninja_shoot);
ds_list_add(attack_ninja_shoot, 250);
ds_list_add(attack_ninja_shoot, obj_bullet_enemy);
ds_list_add(attack_ninja_shoot, 15);
ds_list_add(attack_ninja_shoot, 40);//x arrow
ds_list_add(attack_ninja_shoot, -10);//y arrow

attack_ninja_knife_throw = ds_list_create();
ds_list_add(attack_ninja_knife_throw, 450);
ds_list_add(attack_ninja_knife_throw, 27);
ds_list_add(attack_ninja_knife_throw, 1);
ds_list_add(attack_ninja_knife_throw, false);
ds_list_add(attack_ninja_knife_throw, spr_ninja_knife_throw);
ds_list_add(attack_ninja_knife_throw, 200);
ds_list_add(attack_ninja_knife_throw, obj_ninja_knifes);
ds_list_add(attack_ninja_knife_throw, 24);
ds_list_add(attack_ninja_knife_throw, 0);//x arrow
ds_list_add(attack_ninja_knife_throw, -10);//y arrow

//Potemkin
attack_potemkin_headslam = ds_list_create();
ds_list_add(attack_potemkin_headslam, 100);
ds_list_add(attack_potemkin_headslam, 20);
ds_list_add(attack_potemkin_headslam, 1);
ds_list_add(attack_potemkin_headslam, false);
ds_list_add(attack_potemkin_headslam, spr_potemkin_headslam);
ds_list_add(attack_potemkin_headslam, 0);
ds_list_add(attack_potemkin_headslam, obj_no_projectile);
ds_list_add(attack_potemkin_headslam, 3);
ds_list_add(attack_potemkin_headslam, 0);//x collision
ds_list_add(attack_potemkin_headslam, 0);//y collision
ds_list_add(attack_potemkin_headslam, obj_self_collision);//collision mask

attack_potemkin_bodyslam = ds_list_create();
ds_list_add(attack_potemkin_bodyslam, 80);
ds_list_add(attack_potemkin_bodyslam, 40);
ds_list_add(attack_potemkin_bodyslam, 1);
ds_list_add(attack_potemkin_bodyslam, false);
ds_list_add(attack_potemkin_bodyslam, spr_potemkin_bodyslam);
ds_list_add(attack_potemkin_bodyslam, 0);
ds_list_add(attack_potemkin_bodyslam, obj_no_projectile);
ds_list_add(attack_potemkin_bodyslam, 6);
ds_list_add(attack_potemkin_bodyslam, 0);//x collision
ds_list_add(attack_potemkin_bodyslam, 0);//y collision
ds_list_add(attack_potemkin_bodyslam, obj_self_collision);//collision mask

attack_potemkin_fast_punch = ds_list_create();
ds_list_add(attack_potemkin_fast_punch, 150);
ds_list_add(attack_potemkin_fast_punch, 15);
ds_list_add(attack_potemkin_fast_punch, 1);
ds_list_add(attack_potemkin_fast_punch, false);
ds_list_add(attack_potemkin_fast_punch, spr_potemkin_fast_punch);
ds_list_add(attack_potemkin_fast_punch, 0);
ds_list_add(attack_potemkin_fast_punch, obj_no_projectile);
ds_list_add(attack_potemkin_fast_punch, 3);
ds_list_add(attack_potemkin_fast_punch, 60);//x collision
ds_list_add(attack_potemkin_fast_punch, -15);//y collision
ds_list_add(attack_potemkin_fast_punch, obj_potemkin_punch_collision);//collision mask

//skullturret
attack_skullturret = ds_list_create();
ds_list_add(attack_skullturret, 64);
ds_list_add(attack_skullturret, 45);
ds_list_add(attack_skullturret, 1);
ds_list_add(attack_skullturret, false);
ds_list_add(attack_skullturret, spr_skull_turret_attack);
ds_list_add(attack_skullturret, 0);
ds_list_add(attack_skullturret, obj_no_projectile);
ds_list_add(attack_skullturret, 9);
ds_list_add(attack_skullturret, 0);//x collision
ds_list_add(attack_skullturret, 0);//y collision
ds_list_add(attack_skullturret, obj_self_collision);//collision mask

//ky
attack_ky_kick = ds_list_create();
ds_list_add(attack_ky_kick, 100);
ds_list_add(attack_ky_kick, 15);
ds_list_add(attack_ky_kick, 1);
ds_list_add(attack_ky_kick, false);
ds_list_add(attack_ky_kick, spr_ky_kick);
ds_list_add(attack_ky_kick, 10);
ds_list_add(attack_ky_kick, obj_no_projectile);
ds_list_add(attack_ky_kick, 5);
ds_list_add(attack_ky_kick, 0);//x collision
ds_list_add(attack_ky_kick, -10);//y collision
ds_list_add(attack_ky_kick, obj_ky_kick_collision);//collision mask

attack_ky_long_stab = ds_list_create();
ds_list_add(attack_ky_long_stab, 225);
ds_list_add(attack_ky_long_stab, 25);
ds_list_add(attack_ky_long_stab, 1);
ds_list_add(attack_ky_long_stab, false);
ds_list_add(attack_ky_long_stab, spr_ky_long_stab);
ds_list_add(attack_ky_long_stab, 50);
ds_list_add(attack_ky_long_stab, obj_no_projectile);
ds_list_add(attack_ky_long_stab, 13);
ds_list_add(attack_ky_long_stab, 138);//x collision
ds_list_add(attack_ky_long_stab, 0);//y collision
ds_list_add(attack_ky_long_stab, obj_ky_long_stab_collision);//collision mask

attack_ky_slash = ds_list_create();
ds_list_add(attack_ky_slash, 140);
ds_list_add(attack_ky_slash, 22);
ds_list_add(attack_ky_slash, 1);
ds_list_add(attack_ky_slash, false);
ds_list_add(attack_ky_slash, spr_ky_slash);
ds_list_add(attack_ky_slash, 20);
ds_list_add(attack_ky_slash, obj_no_projectile);
ds_list_add(attack_ky_slash, 7);
ds_list_add(attack_ky_slash, 110);//x collision
ds_list_add(attack_ky_slash, 92);//y collision
ds_list_add(attack_ky_slash, obj_ky_slash_collision);//collision mask

attack_ky_uppercut = ds_list_create();
ds_list_add(attack_ky_uppercut, 150);
ds_list_add(attack_ky_uppercut, 29);
ds_list_add(attack_ky_uppercut, 1);
ds_list_add(attack_ky_uppercut, false);
ds_list_add(attack_ky_uppercut, spr_ky_uppercut);
ds_list_add(attack_ky_uppercut, 0);
ds_list_add(attack_ky_uppercut, obj_no_projectile);
ds_list_add(attack_ky_uppercut, 13);
ds_list_add(attack_ky_uppercut, 125);//x collision
ds_list_add(attack_ky_uppercut, -126);//y collision
ds_list_add(attack_ky_uppercut, obj_ky_uppercut_collision);//collision mask

//zato
attack_zato_bite = ds_list_create();
ds_list_add(attack_zato_bite, 200);
ds_list_add(attack_zato_bite, 19);
ds_list_add(attack_zato_bite, 1);
ds_list_add(attack_zato_bite, false);
ds_list_add(attack_zato_bite, spr_zato_bite);
ds_list_add(attack_zato_bite, 100);
ds_list_add(attack_zato_bite, obj_no_projectile);
ds_list_add(attack_zato_bite, 10);
ds_list_add(attack_zato_bite, 157);//x collision
ds_list_add(attack_zato_bite, -69);//y collision
ds_list_add(attack_zato_bite, obj_zato_bite_collision);//collision mask

attack_zato_kick = ds_list_create();
ds_list_add(attack_zato_kick, 130);
ds_list_add(attack_zato_kick, 22);
ds_list_add(attack_zato_kick, 1);
ds_list_add(attack_zato_kick, false);
ds_list_add(attack_zato_kick, spr_zato_kick);
ds_list_add(attack_zato_kick, 50);
ds_list_add(attack_zato_kick, obj_no_projectile);
ds_list_add(attack_zato_kick, 14);
ds_list_add(attack_zato_kick, 105);//x collision
ds_list_add(attack_zato_kick, -14);//y collision
ds_list_add(attack_zato_kick, obj_zato_kick_collision);//collision mask

attack_zato_slide = ds_list_create();
ds_list_add(attack_zato_slide, 100);
ds_list_add(attack_zato_slide, 14);
ds_list_add(attack_zato_slide, 1);
ds_list_add(attack_zato_slide, false);
ds_list_add(attack_zato_slide, spr_zato_slide);
ds_list_add(attack_zato_slide, 0);
ds_list_add(attack_zato_slide, obj_no_projectile);
ds_list_add(attack_zato_slide, 9);
ds_list_add(attack_zato_slide, 78);//x collision
ds_list_add(attack_zato_slide, 11);//y collision
ds_list_add(attack_zato_slide, obj_zato_slide_collision);//collision mask

attack_zato_drill = ds_list_create();
ds_list_add(attack_zato_drill, 1000);
ds_list_add(attack_zato_drill, 34);
ds_list_add(attack_zato_drill, 1);
ds_list_add(attack_zato_drill, false);
ds_list_add(attack_zato_drill, spr_zato_drill);
ds_list_add(attack_zato_drill, 250);
ds_list_add(attack_zato_drill, obj_no_projectile);
ds_list_add(attack_zato_drill, 10);
ds_list_add(attack_zato_drill, 0);//x collision
ds_list_add(attack_zato_drill, 0);//y collision
ds_list_add(attack_zato_drill, obj_no_collision);//collision mask

attack_zato_tel_kick = ds_list_create();
ds_list_add(attack_zato_tel_kick, 1000);
ds_list_add(attack_zato_tel_kick, 17);
ds_list_add(attack_zato_tel_kick, 1);
ds_list_add(attack_zato_tel_kick, false);
ds_list_add(attack_zato_tel_kick, spr_zato_tel_kick);
ds_list_add(attack_zato_tel_kick, 150);
ds_list_add(attack_zato_tel_kick, obj_no_projectile);
ds_list_add(attack_zato_tel_kick, 10);
ds_list_add(attack_zato_tel_kick, 0);//x collision
ds_list_add(attack_zato_tel_kick, 0);//y collision
ds_list_add(attack_zato_tel_kick, obj_no_collision);//collision mask

//Zato's minion
attack_minion_attack = ds_list_create();
ds_list_add(attack_minion_attack, 170);
ds_list_add(attack_minion_attack, 9);
ds_list_add(attack_minion_attack, 1);
ds_list_add(attack_minion_attack, false);
ds_list_add(attack_minion_attack, spr_minion_attack);
ds_list_add(attack_minion_attack, 0);
ds_list_add(attack_minion_attack, obj_no_projectile);
ds_list_add(attack_minion_attack, 10);
ds_list_add(attack_minion_attack, 0);//x collision
ds_list_add(attack_minion_attack, -40);//y collision
ds_list_add(attack_minion_attack, obj_minion_attack_collision);//collision mask

attack_minion_move_attack = ds_list_create();
ds_list_add(attack_minion_move_attack, 300);
ds_list_add(attack_minion_move_attack, 12);
ds_list_add(attack_minion_move_attack, 1);
ds_list_add(attack_minion_move_attack, false);
ds_list_add(attack_minion_move_attack, spr_minion_move_attack_x_300);
ds_list_add(attack_minion_move_attack, 0);
ds_list_add(attack_minion_move_attack, obj_no_projectile);
ds_list_add(attack_minion_move_attack, -1);
ds_list_add(attack_minion_move_attack, 0);//x collision
ds_list_add(attack_minion_move_attack, 0);//y collision
ds_list_add(attack_minion_move_attack, obj_self_collision);//collision mask

back_dash = ds_list_create();
ds_list_add(back_dash, 1000);
ds_list_add(back_dash, 0);
ds_list_add(back_dash, 1);
ds_list_add(back_dash, false);
ds_list_add(back_dash, spr_vairl_walking);
ds_list_add(back_dash, 0);
ds_list_add(back_dash, obj_no_projectile);
ds_list_add(back_dash, -1);
ds_list_add(back_dash, 0);//x collision
ds_list_add(back_dash, 0);//y collision
ds_list_add(back_dash, obj_self_collision);


/*attack_melee = ds_list_create();
ds_list_add(attack_melee, 100);
ds_list_add(attack_melee, 10);
ds_list_add(attack_melee, 1);
ds_list_add(attack_melee, false);
ds_list_add(attack_melee, spr_ninja_low_slash);
ds_list_add(attack_melee, 0);
ds_list_add(attack_melee, obj_no_projectile);
ds_list_add(attack_melee, 3);
ds_list_add(attack_melee, 40);//x collision
ds_list_add(attack_melee, 10);//y collision
ds_list_add(attack_melee, obj_ninja_low_slash_collision);//collision mask





attack_ranged = ds_list_create();
ds_list_add(attack_ranged, 250);
ds_list_add(attack_ranged, 50);
ds_list_add(attack_ranged, 1);
ds_list_add(attack_ranged, false);
ds_list_add(attack_ranged, spr_ninja_shoot);
ds_list_add(attack_ranged, 100);
ds_list_add(attack_ranged, obj_bullet_enemy);
ds_list_add(attack_ranged, 1);
ds_list_add(attack_ranged, 40);//x arrow
ds_list_add(attack_ranged, 10);//y arrow*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
