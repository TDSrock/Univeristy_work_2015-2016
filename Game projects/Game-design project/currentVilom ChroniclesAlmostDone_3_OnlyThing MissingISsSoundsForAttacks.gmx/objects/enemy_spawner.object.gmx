<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type[0] = Ninja;
max_enemies = 1;
enemies_allowed = max_enemies;
corruption_range = 700;
range = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while(enemies_allowed != 0)
{
    var l,t;
    l=ds_list_create();
    while 1{
        t=collision_circle(x,y,corruption_range,Par_Tile,false,true);
        if t{
            ds_list_add(l,t);
            instance_deactivate_object(t);
        } else {
        break;
        }
    }
    Current_corruption = 0;
    for(t=0;t&lt;ds_list_size(l);t+=1){
        instance_operating = ds_list_find_value(l,t);
        instance_activate_object(instance_operating);
        Current_corruption += instance_operating.corruption;
    }
    if(ds_list_size(l) != 0)
        corruption_avg = Current_corruption/ds_list_size(l);
    ds_list_destroy(l);
    randomize();
    new_enemy = instance_create(x+random(range), y+random(range), type[clamp(floor((corruption_avg/100) * array_length_1d(type)),0,array_length_1d(type)-1)]);
    new_enemy.CreatorID = id;
    new_enemy.corruption = corruption_avg;
    with(new_enemy)
    {
        while(place_meeting(x,y,Par_Walls))
            y--;
        origin = x;
        image_blend = make_colour_rgb(255,255-corruption*2.55,255-corruption*2.55);
    }
    enemies_allowed--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
